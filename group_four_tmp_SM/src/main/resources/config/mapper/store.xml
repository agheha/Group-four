<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="g4.mini.store.dao.StoreMapper">
	
	<resultMap type="Store" id="storeMap">
		<result column="sto_no" property="stoNo"/>
		<result column="sto_id" property="stoId"/>
		<result column="sto_pass" property="stoPass"/>
		<result column="sto_name" property="stoName"/>
		<result column="rst_Menu" property="rstMenu"/>
		<result column="rst_price" property="rstPrice"/>
		<result column="sto_type" property="stoType"/>
		<result column="bit_distance" property="bitDistance"/>
		<result column="sto_gpa" property="stoGpa"/>
		<result column="sto_addr" property="stoAddr"/>
		<result column="sto_hours" property="stoHours"/>
		<result column="sto_phone_number" property="stoPhoneNumber"/>
		<result column="sto_seat" property="stoSeat"/>
		<result column="sto_now_seat" property="stoNowSeat"/>
		<result column="bit_position" property="bitPosition"/>
		<result column="acc_reservation" property="accReservation"/>
	</resultMap>
	
	<select id="storeLogin" parameterType="Store" resultMap="storeMap">
		select *
		from store_tb
		where sto_id = #{stoId} 
		and sto_pass = #{stoPass}
	</select>


	<!-- user 회원가입 -->
	<insert id="storeJoin" parameterType="Store">
		insert into store_tb(
		sto_no, sto_id, sto_pass, sto_name, rst_menu, rst_price, sto_type, bit_distance, sto_addr, sto_hours, sto_phone_number, sto_seat)
		values (
		seq_store_no.nextval,
		#{stoId},
		#{stoPass},
		#{stoName},
		#{rstMenu},
		#{rstPrice},
		#{stoType},
		#{bitDistance},
		#{stoAddr},
		#{stoHours},
		#{stoPhoneNumber},
		#{stoSeat}
		)
	</insert>

	<!-- 회원가입의 아이디일치여부 -->
	<select id="idMatching" parameterType="string" resultType="int">
		select count(*)
		from store_tb
		where sto_id = #{stoId}
	</select>


	<!-- 회원번호받아 user객체 반환 -->
	<select id="selectOneStore" parameterType="int" resultMap="storeMap">
		select *
		from store_tb
		where sto_no = #{stoNo}
	</select>

	<!-- 비밀번호 변경 -->
	<update id="passUpdate" parameterType="User">
		UPDATE user_tb
		SET user_pass = #{userPass}
		WHERE sto_no = #{stoNo}
	</update>

	<!-- 회원 탈퇴 -->
	<delete id="deleteUser" parameterType="Store">
		delete from store_tb
		where sto_no = #{stoNo}
	</delete>
	
	<select id="adminCheck" parameterType="User" resultType="int">
		select count(*)
		from admin_tb
		where admin_id = #{stoId} 
		and admin_pass = #{stoPass}
	</select>
	
	
</mapper>
	