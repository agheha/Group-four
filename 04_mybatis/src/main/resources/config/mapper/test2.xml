<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mlec.dao.TestMapper2">
	<select id="selectMemberInfo1" parameterType="string"
		resultType="Member">
		select id,
		name,
		addr,
		email
		from tb_mybatis_member
		where id =
		#{id}
	</select>

	<select id="selectMemberInfo2" parameterType="Member"
		resultType="Member">
		select id,
		name,
		addr,
		email
		from tb_mybatis_member
		where id =
		#{id}
		and name = #{name}
	</select>

	<select id="selectMemberInfo3" parameterType="string"
		resultType="string">
		select name
		from tb_mybatis_member
		where id = #{id}
	</select>

	<select id="selectMemberInfo4" resultType="int">
		select count(*)
		from
		tb_mybatis_member
	</select>

	<select id="selectMemberList1" resultType="Member">
		select id ,
		name,
		email,
		addr,
		join_date as joinDate
		from tb_mybatis_member
		order by id
	</select>

	<select id="selectMemberList2" resultType="string">
		select name
		from
		tb_mybatis_member
		order by id
	</select>

	<!-- SQL의 결과와 VO 를 결합 -->
	<resultMap type="Member" id="memberMap">
		<result column="id" property="id" />
		<result column="name" property="name" />
		<result column="addr" property="addr" />
		<result column="email" property="email" />
		<result column="join_date" property="joinDate" />
	</resultMap>

	<select id="selectMemberList3" resultMap="memberMap">
		select *
		from
		tb_mybatis_member
		order by id
	</select>

	<insert id="insertMember" parameterType="Member">
		insert into
		tb_mybatis_member(id, name, email, addr)
		values(#{id}, #{name},
		#{email}, #{addr})
	</insert>

	<update id="updateMember" parameterType="Member">
		update tb_mybatis_member
		set addr = #{addr},
		email = #{email}
		where id = #{id}
	</update>

	<delete id="deleteMember" parameterType="string">
		delete
		from
		tb_mybatis_member pare
		where id = #{id}
	</delete>

	<select id="selectMemberIteratorList" parameterType="Member"
		resultMap="memberMap">
		select *
		from tb_mybatis_member
		<!-- 배열이나 리스트를 활용하기 -->
		where addr in
		<foreach item="addr" collection="addrs" separator="," open="("
			close=")">
			#{addr}
		</foreach>
	</select>

	<!-- 쿼리의 중복된 부분의 처리 -->
	<sql id="commonMember">
		from tb_mybatis_member
		where addr like '%s%'
	</sql>
	<select id="selectMemberIncludeList" resultMap="memberMap">
		select *
		<include refid="commonMember" />
	</select>
	<select id="selectMemberIncludeListCount" resultType="int">
		select count(*)
		<include refid="commonMember" />
	</select>

	<!-- 선택박스 검색 처리 부분 -->
	<select id="selectMemberSearchList" parameterType="Search"
		resultMap="memberMap">
		select *
		from tb_mybatis_member
		<choose>
			<when test="searchType == 'id'">
				where id like '%' || #{searchWord} || '%'
			</when>
			<when test="searchType == 'name'">
				where name like '%' || #{searchWord} || '%'
			</when>
			<otherwise>
				where addr like '%' || #{searchWord} || '%'
			</otherwise>
		</choose>
	</select>

	<select id="selectMemberInputList" parameterType="Member"
		resultMap="memberMap">
		select *
		  from tb_mybatis_member
		<where>
			<if test="id != null">
				id like '%' || #{id} || '%'
			</if>
			<if test="name != null">
				and name like '%' || #{name} || '%'
			</if>
		</where>
		<!-- and email like '%c%' -->
	</select>




</mapper>